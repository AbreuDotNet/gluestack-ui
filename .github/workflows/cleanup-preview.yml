name: Cleanup Preview Packages

on:
  pull_request:
    branches: [feat/v3]
    types: [closed]

jobs:
  cleanup-preview-packages:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == false # Only cleanup if PR was closed without merging
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup NPM authentication
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Cleanup preview packages
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}

          # Find all packages in the packages directory
          find packages -name "package.json" -type f | while read file; do
            PACKAGE_NAME=$(node -e "console.log(JSON.parse(require('fs').readFileSync('$file', 'utf8')).name)")
            
            echo "üßπ Cleaning up preview versions for $PACKAGE_NAME..."
            
            # Get all versions with our PR pattern
            VERSIONS=$(npm view "$PACKAGE_NAME" versions --json 2>/dev/null | jq -r ".[] | select(test(\"0\\.0\\.0-pr-${PR_NUMBER}-\"))" 2>/dev/null || echo "")
            
            if [ -n "$VERSIONS" ]; then
              echo "$VERSIONS" | while read version; do
                if [ -n "$version" ]; then
                  echo "üóëÔ∏è  Deprecating $PACKAGE_NAME@$version..."
                  npm deprecate "$PACKAGE_NAME@$version" "Preview package for closed PR #${PR_NUMBER}" || echo "Failed to deprecate $PACKAGE_NAME@$version"
                fi
              done
            else
              echo "‚ÑπÔ∏è  No preview versions found for $PACKAGE_NAME"
            fi
          done

      - name: Comment cleanup status
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `üßπ **Preview package cleanup completed!**

            All preview packages for PR #${{ github.event.pull_request.number }} have been deprecated.

            These packages are no longer recommended for use and will be cleaned up automatically by npm.`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
